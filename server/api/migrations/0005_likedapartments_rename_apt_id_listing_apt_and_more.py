# Generated by Django 4.1.7 on 2023-03-28 09:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0004_rename_user_id_apartment_user"),
    ]

    operations = [
        migrations.CreateModel(
            name="LikedApartments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "liked_apartments",
            },
        ),
        migrations.RenameField(
            model_name="listing",
            old_name="apt_id",
            new_name="apt",
        ),
        migrations.AlterField(
            model_name="apartment",
            name="user",
            field=models.ForeignKey(
                db_column="user_id",
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="apartments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User ID",
            ),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "liked_apartments",
                    models.ManyToManyField(
                        through="api.LikedApartments", to="api.apartment"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_profiles",
            },
        ),
        migrations.AddField(
            model_name="likedapartments",
            name="apartment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.apartment"
            ),
        ),
        migrations.AddField(
            model_name="likedapartments",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="likedapartments",
            name="user_profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.userprofile"
            ),
        ),
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pet_friendly",
                    models.BooleanField(db_column="pet_friendly", default=False),
                ),
                (
                    "smoke_friendly",
                    models.BooleanField(db_column="smoke_friendly", default=False),
                ),
                ("is_wifi", models.BooleanField(db_column="is_wifi", default=False)),
                (
                    "is_balcony",
                    models.BooleanField(db_column="is_balcony", default=False),
                ),
                (
                    "is_parking",
                    models.BooleanField(db_column="is_parking", default=False),
                ),
                (
                    "apt",
                    models.ForeignKey(
                        db_column="apt_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attributes",
                        to="api.apartment",
                    ),
                ),
            ],
            options={
                "db_table": "attributes",
            },
        ),
        migrations.AddField(
            model_name="apartment",
            name="liked_by_users",
            field=models.ManyToManyField(
                related_name="liked_apartments",
                through="api.LikedApartments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stars",
                    models.DecimalField(
                        db_column="stars",
                        decimal_places=1,
                        max_digits=2,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        max_length=400,
                        validators=[django.core.validators.MinLengthValidator(32)],
                    ),
                ),
                (
                    "apartment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="api.apartment",
                    ),
                ),
                (
                    "sender_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reviews",
                "unique_together": {("sender_user", "apartment")},
            },
        ),
        migrations.CreateModel(
            name="Proposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(db_column="is_active", default=False),
                ),
                (
                    "apartment",
                    models.ForeignKey(
                        db_column="apt",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.apartment",
                    ),
                ),
                (
                    "owner_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_proposals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_proposals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "proposals",
                "unique_together": {("sender_user", "apartment")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="likedapartments",
            unique_together={("user", "apartment")},
        ),
    ]
